/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-11-03 05:44:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class agree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1698977023389L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1697173982688L));
    _jspx_dependants.put("jar:file:/D:/juheon/workspace/Javawork/jsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/bookrental/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1698984617059L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/joinAgree.css\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"script/member.js\"></script>\r\n");
      out.write("    <title>약관동의</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/header.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"script/header.js\"></script>\r\n");
      out.write("<header>\r\n");
      out.write("	<!-- headerTop -->\r\n");
      out.write("	<div class=\"headerTopWrap\">\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<a href=\"index.jsp\"><img src=\"image/logo.png\" alt=\"logoImg\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"headerSerchWrap\">\r\n");
      out.write("			<div class=\"headerSerchBox\">\r\n");
      out.write("				<form action=\"BookServlet?command=book_slist\" method=\"post\"\r\n");
      out.write("				name=\"frm\" class=\"searchWordWrap\">\r\n");
      out.write("					<div class=\"headerSerch\">\r\n");
      out.write("						<input type=\"text\" name=\"searchWord\" class=\"searchWord\" placeholder=\"검색어를 입력하세요.(도서명, 작가, 출판사 등)\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"headerSerchBtn\">\r\n");
      out.write("						<button type=\"submit\">\r\n");
      out.write("							<img src=\"image/serch.jpg\" alt=\"serchIcon\">\r\n");
      out.write("						</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"headerNav1\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- headerBottom -->\r\n");
      out.write("	<div class=\"headerBottomWrap\">\r\n");
      out.write("		<div class=\"headerNav2\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li>도서관 안내\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">회원 가입 안내</a></li>\r\n");
      out.write("							<li><a href=\"#\">도서 대여 안내</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>도서검색\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">통합도서 검색</a></li>\r\n");
      out.write("							<li><a href=\"BookServlet?command=book_dlist\">신간도서 조회</a></li>\r\n");
      out.write("							<li><a href=\"BookServlet?command=book_plist\">인기도서 조회</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>열린마당\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("							<li><a href=\"#\">Q&A</a></li>\r\n");
      out.write("							<li><a href=\"#\">독후감</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>내 서재\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">나의정보</a></li>\r\n");
      out.write("							<li><a href=\"#\">구독내역 조회</a></li>\r\n");
      out.write("							<li><a href=\"#\">대여내역 조회</a></li>\r\n");
      out.write("							<li><a href=\"#\">반납현황 조회</a></li>\r\n");
      out.write("							");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("    <div class=\"shareContainer\">\r\n");
      out.write("        <div class=\"shareImg\" style=\"background: url(image/svisual_img.png);\"></div>\r\n");
      out.write("        <div class=\"shareContentWrap\">\r\n");
      out.write("            <div class=\"shareNav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li class=\"navTitle\">회원정보</li>\r\n");
      out.write("                    <li><span><a href=\"login.jsp\">로그인</a></span></li>\r\n");
      out.write("                    <li><span class=\"keyword\"><a href=\"agree.jsp\">회원가입</a></span></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"shareContentBox\">\r\n");
      out.write("                <div class=\"shareContentTitle\">\r\n");
      out.write("                    <div class=\"contentTitle\">회원가입</div>\r\n");
      out.write("                    <div class=\"contentNav\">\r\n");
      out.write("                        <span>홈</span>\r\n");
      out.write("                        <i class=\"arrow\" style=\"background: url(image/ico_naviArrow.png)0 50% no-repeat;\"></i>\r\n");
      out.write("                        <span>회원정보</span>\r\n");
      out.write("                        <i class=\"arrow\" style=\"background: url(image/ico_naviArrow.png)0 50% no-repeat;\"></i>\r\n");
      out.write("                        <span>회원가입</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"shareContent\">\r\n");
      out.write("                    <div class=\"joinNav\">\r\n");
      out.write("                        <ul>  \r\n");
      out.write("                            <li class=\"keyNav\">01. 약관동의<img src=\"image/joinStep_arrOn.png\" alt=\"navicon\"></li>\r\n");
      out.write("                            <li>02. 회원 정보 입력<img src=\"image/joinStep_arr.png\" alt=\"navicon\"></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <form class=\"joinAgreeForm\" action=\"join.jsp\" onsubmit=\"return validateAgreements();\">\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <h2>이용약관<span>(필수)</span></h2>\r\n");
      out.write("                            <textarea rows=\"10\">\r\n");
      out.write("제1장 총칙\r\n");
      out.write("이 약관은 화성시시립도서관의 회원 서비스 및 이용조건 . 절차에 관한 사항을 규정함을 목적으로 합니다.\r\n");
      out.write("\r\n");
      out.write("제2장 회원가입과 서비스 이용\r\n");
      out.write("제1조 이용 계약의 성립\r\n");
      out.write("(1) 이용 계약은 개인의 이용 신청에 대하여 약관 내용에 대한 이용자의 동의 후 화성시립 도서관의 이용 응낙에 의해 성립됩니다.\r\n");
      out.write("(2) 회원에 가입하여 서비스를 이용하고자 하는 회원은 화성시시립도서관에서 요청하는 소정의 개인정보(반드시 실명)를 제공해야 합니다.\r\n");
      out.write("(3) 화성시립 도서관은 다음에 해당하는 회원가입신청에 대하여는 이를 응낙하지 아니하며, 올리신 글을 사전통보 없이 임의로 삭제할 수 있습니다.\r\n");
      out.write("① 다른 사람의 명의를 사용하여 신청하였을 때\r\n");
      out.write("② 회원가입 신청서의 내용을 허위로 기재(실명이 아니거나, 연락처로 연락이 안되는 경우)했을 경우\r\n");
      out.write("③ 일방적인 비방이나, 상업적인 용도의 글을 올리는 경우\r\n");
      out.write("제 2 조 서비스 이용\r\n");
      out.write("(1) 서비스 이용은 화성시립 도서관의 운영 또는 기술상 특별한 지장이 없는 한 연중무휴, 1일 24시간을 원칙으로 합니다.\r\n");
      out.write("(2) 회원은 게시판에 글을 올리고 열람할 수 있습니다.\r\n");
      out.write("제3장 책임\r\n");
      out.write("제1조 화성시 시립도서관의 의무\r\n");
      out.write("(1) 화성시립 도서관은 특별한 사정이 없는 한 이용자가 서비스를 신청한 날짜부터 이용할 수 있도록 합니다.\r\n");
      out.write("(2) 화성시립 도서관은 이용자의 개인정보 및 기업정보를 이용자의 승낙 없이 타인에게 누설, 배포하여서는 아니 됩니다.\r\n");
      out.write("제2조 회원의 의무\r\n");
      out.write("(1) 아이디와 비밀번호에 관한 모든 관리의 책임은 회원에게 있습니다.\r\n");
      out.write("(2) 등록된 회원은 본 약관에서 규정한 사항을 준수해야 합니다.\r\n");
      out.write("(3) 회원가입 신청시 허위 기재사항이 없어야 합니다(실명, 연락이 가능한 연락처)\r\n");
      out.write("제3조 개인정보의 보호\r\n");
      out.write("여기는 화성시시립도서관의 웹사이트입니다. 우리도서관 홈페이지의 이용에 대해 감사드리며, 홈페이지에서의 개인정보보호방침에 대하여 설명을 드리겠습니다. 이는 현행·공공기관의 개인정보보호에 관한법률 및 공공기관의 개인정보보호를 위한 기본지침에 근거를 두고 있습니다. 우리도서관에서 운영하고 있는 웹사이트는 다음과 같으며, 이 방침은 별도의 설명이 없는 한 우리도서관에서 운용하는 모든 웹사이트에 적용됨을 알려드립니다. www.hscitylib.or.kr, m.hscitylib.or.kr, ebook.hscitylib.or.kr 등\r\n");
      out.write("① 자동으로 수집·저장되는 개인정보\r\n");
      out.write("여러분이 우리도서관 홈페이지를 이용할 경우 다음의 정보는 자동적으로 수집·저장됩니다.\r\n");
      out.write("이용자 여러분의 인터넷서버 도메인과 우리 홈페이지를 방문할 때 거친 웹사이트의 주소\r\n");
      out.write("이용자의 브라우져 종류 및 OS\r\n");
      out.write("방문일시 등\r\n");
      out.write("위와 같이 자동 수집·저장되는 정보는 이용자 여러분에게 보다 나은 서비스를 제공하기 위해 홈페이지의 개선과 보완을 위한 통계분석, 이용자와 웹사이트 간의 원활한 의사소통 등을 위해 이용되어질 것입니다.\r\n");
      out.write("다만, 법령의 규정에 따라 이러한 정보를 제출하게 되어 있을 경우도 있다는 것을유념하시기 바랍니다.\r\n");
      out.write("② 이메일 및 웹 서식 등을 통한 수집 정보\r\n");
      out.write("이용자 여러분은 우편, 전화 또는 온라인 전자서식 등을 통한 전자적 방법을 통해 의사를 표시할 수 있습니다. 이러한 방법의 선택에 있어 몇 가지 유의사항을 알려드립니다.\r\n");
      out.write("여러분이 홈페이지에 기재한 사항은 다른 사람들이 조회 또는 열람할 수도 있습니다.\r\n");
      out.write("여러분이 기재한 사항은 관련 법규에 근거하여 필요한 다른 사람과 공유될 수 있으며, 관련법령의 시행과 정책개발의 자료로도 사용될 수 있습니다.\r\n");
      out.write("또한, 이러한 정보는 타 부처와 공유되거나, 필요에 의하여 제공될 수도 있습니다.\r\n");
      out.write("홈페이지 보안을 위해 관리적·기술적 노력을 하고 있으나, 만약의 침해사고 시 문제가 될 수 있는 민감한 정보의 기재는 피하여 주시기 바랍니다.\r\n");
      out.write("③ 웹사이트에서 운영하는 보안조치\r\n");
      out.write("홈페이지의 보안 또는 지속적인 서비스를 위해, 우리공사는 네트워크 트래픽의 통제(Monitor)는 물론 불법적으로 정보를 변경하는 등의 시도를 탐지하기 위해 여러 가지 프로그램을 운영하고 있습니다.\r\n");
      out.write("④ 링크 사이트·웹 페이지\r\n");
      out.write("화성시시립도서관이 운영하는 여러 웹페이지에 포함된 링크 또는 배너를 클릭하여 다른 사이트 또는 웹페이지로 옮겨갈 경우 개인정보보호방침은 그 사이트 운영기관이 게시한 방침이 적용됨으로 새로 방문한 사이트의 방침을 확인하시기 바랍니다.\r\n");
      out.write("⑤ 웹사이트 이용 중 다른 사람의 개인정보 취득\r\n");
      out.write("화성시시립도서관이 운영하는 웹사이트에서 이메일 주소 등 식별할 수 있는 개인정보를 취득하여서는 아니 됩니다. 사위 기타 부정한 방법으로 이러한 개인정보를 열람 또는 제공받은 자는 공공기관의 개인정보보호에 관한 법률 제23조의 규정에 의하여 처벌을 받을 수 있습니다.\r\n");
      out.write("⑥ 개인정보 침해사항의 신고\r\n");
      out.write("화성시시립도서관의 웹사이트 이용 중 개인정보의 유출 가능성 등 정보주체의 권익이 침해될 우려가 있는 사실을 발견하였을 경우는 다음의 연락처로 알려주시기 바랍니다.\r\n");
      out.write("화성시립도서관 개인정보보호담당자\r\n");
      out.write("이메일	lhj0610@hcf.or.kr	전화번호	031-8015-8284\r\n");
      out.write("주소	우) 445-896 화성시 노작로 134	팩스	031-8015-8289\r\n");
      out.write("[부 칙]\r\n");
      out.write("(시행일) 이 약관은 2005년 06월 01일부터 시행합니다.\r\n");
      out.write("(효 력) 본 약관은 이용자가 회원에 가입함과 동시에 효력을 발생합니다.\r\n");
      out.write("                            </textarea>\r\n");
      out.write("                            <br />\r\n");
      out.write("                            <div class=\"joinAgreeCheckBox\">\r\n");
      out.write("                                <label>이용약관에 동의합니다.</label>\r\n");
      out.write("                                <input type=\"checkbox\" id=\"agree1\" onclick=\"\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <h2>개인정보 수집 및 이용 동의<span>(필수)</span></h2>\r\n");
      out.write("                            <textarea rows=\"10\">\r\n");
      out.write("1) 수집 항복 및 수집방법\r\n");
      out.write("1.화성시통합도서관리시스템 (공공도서관표준자료관리시스템/화성시시립도서관홈페이지)\r\n");
      out.write("필수항목 : 성명, 주소, 휴대폰번호, 홈페이지 아이디, 홈페이지 비밀번호, 회원증 비밀번호\r\n");
      out.write("선택항목 : 집전화번호, 가족전화번호, 이메일주소\r\n");
      out.write("2.인터넷 서비스 이용과정에서 아래 개인정보 항목이 자동으로 생성되어 수집될 수 있습니다.\r\n");
      out.write("IP주소, 쿠키, MAC주소, 서비스 이용기록, 방문기록, 불량 이용기록 등\r\n");
      out.write("2) 수집 및 이용목적\r\n");
      out.write("1.화성시통합도서관리시스템 (공공도서관표준자료관리시스템/화성시시립도서관홈페이지)\r\n");
      out.write("회원 가입의사 확인, 회원제 서비스 제공에 따른 본인 식별 · 인증, 회원자격 유지 · 관리, 서비스 부정이용 방지, 만14세 미만 아동 개인정보 수집 시 법정대리인 동의 여부 확인, 각종 고지 · 통지 등을 목적으로 개인정보를 처리합니다.\r\n");
      out.write("                                \r\n");
      out.write("2.도서관 서비스 제공\r\n");
      out.write("이용약관에 의해 도서관에서 제공하는 서비스(도서대출, 책이음서비스, 전자도서관, 전자정보자료실, DVD감상실)의 운영 및 안내 등의 목적으로 개인정보를 처리합니다.\r\n");
      out.write("                                \r\n");
      out.write("3.민원사무 처리\r\n");
      out.write("민원인의 신원 확인, 민원사항 확인, 사실조사를 위한 연락 · 통지, 처리결과 통보 등의 목적으로 개인정보를 처리합니다.\r\n");
      out.write("                                \r\n");
      out.write("3) 보유 및 이용기간\r\n");
      out.write("화성시시립도서관은 법령에 따른 개인정보 보유 · 이용기간 또는 정보주체로부터 개인정보를 수집시에 동의받은 개인정보 보유 · 이용기간 내에서 개인정보를 처리 · 보유합니다. 각각의 개인정보의 처리 및 보유 기간은 다음과 같습니다.\r\n");
      out.write("                                \r\n");
      out.write("1.홈페이지 회원 가입 및 관리 : 공공기관 홈페이지 탈퇴 시까지\r\n");
      out.write("1) 관계 법령 위반에 따른 수사 · 조사 등이 진행 중인 경우에는 해당 수사 · 조사 종료 시까지\r\n");
      out.write("2) 도서관 이용에 따른 채권 · 채무관계 잔존 시에는 해당 채권 · 채무관계 정산 시까지\r\n");
      out.write("2.도서관 서비스 제공 : 사물함이용, 문화강좌, 기타 도서관 관련 프로그램의 경우는 1년\r\n");
      out.write("3.민원사무 처리 : 민원처리 종료 후 3년\r\n");
      out.write("                            </textarea>\r\n");
      out.write("                            <br />\r\n");
      out.write("                            <div class=\"joinAgreeCheckBox\">\r\n");
      out.write("                                <label>개인정보 수집 및 이용에 동의합니다.</label>\r\n");
      out.write("                                <input type=\"checkbox\" id=\"agree2\" onclick=\"\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <h2>개인정보 제3자 제공 동의<span>(선택)</span></h2>\r\n");
      out.write("                            <textarea rows=\"10\">\r\n");
      out.write("화성시시립도서관은 고지하거나 동의한 범위를 초과하여 회원의 개인정보를 이용하거나 제3자에게 제공 또는 공개하지 않습니다. 다만 개인정보 보호법 제17조 및 제18조에 해당하는 경우에만 개인정보를 제3자에게 제공합니다.\r\n");
      out.write("\r\n");
      out.write("'화성시시립도서관'은 다음과 같이 개인정보를 제3자에게 제공하고 있습니다.\r\n");
      out.write("\r\n");
      out.write("1.개인정보를 제공받는 자 : 국립중앙도서관\r\n");
      out.write("2.제공항목 : 성명, 회원번호, 주소, 연락처, 이메일, 대출도서명, 대출 도서권수, 회원의 대출상태 등\r\n");
      out.write("3.제공받는 자의 개인정보 이용목적 : 전국 참여도서관 책이음서비스 제공 (http://book.nl.go.kr)\r\n");
      out.write("4.제공받는 자의 보유 및 이용기간 : 5년\r\n");
      out.write("5.제공시기 : 정보주체의 책이음서비스 요청시 (정보변경 시)\r\n");
      out.write("                            </textarea>\r\n");
      out.write("                            <br />\r\n");
      out.write("                            <div class=\"joinAgreeCheckBox\">\r\n");
      out.write("                                <label>개인정보 제3자 제공에 동의합니다.</label>\r\n");
      out.write("                                <input type=\"checkbox\"  id=\"agree3\" onclick=\"\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <input type=\"submit\" value=\"다음 단계로 > \" class=\"joinAgreeBtn\" >\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<link rel='stylesheet' type='text/css' href='css/footer.css'>\r\n");
      out.write("<footer>\r\n");
      out.write("	<div class=\"footerWrap\">\r\n");
      out.write("		<P>\r\n");
      out.write("			<span>이젠도서관</span> (우)16455 경기도 수원시 팔달구 덕영대로 899 (매산로1가, 세진브론즈빌) TEL : 031-253-5225\r\n");
      out.write("			FAX : 031-356-5357<br /> COPYRIGHT&copy; EZENLIBRARY. ALL\r\n");
      out.write("			RIGHTS RESERVERD.\r\n");
      out.write("		</P>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /header.jsp(30,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<!-- 사용자가 로그인한 경우 -->\r\n");
          out.write("					<ul>\r\n");
          out.write("						<li><a href=\"BookServlet?command=logout-form\">로그아웃</a></li>\r\n");
          out.write("						<li>|</li>\r\n");
          out.write("						<li><a href=\"passCheck.jsp\">정보수정</a></li>\r\n");
          out.write("						<li>|</li>\r\n");
          out.write("						<li><a href=\"sitemap.jsp\">사이트맵</a></li>\r\n");
          out.write("					</ul>\r\n");
          out.write("					<a>안녕하세요, ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.membername}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님!</a>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<!-- 사용자가 로그인하지 않은 경우 -->\r\n");
          out.write("					<ul>\r\n");
          out.write("						<li><a href=\"BookServlet?command=login-form\">로그인</a></li>\r\n");
          out.write("						<li>|</li>\r\n");
          out.write("						<li><a href=\"BookServlet?command=agree-from\">회원가입</a></li>\r\n");
          out.write("						<li>|</li>\r\n");
          out.write("						<li><a href=\"sitemap.jsp\">사이트맵</a></li>\r\n");
          out.write("					</ul>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							    ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							    ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /header.jsp(87,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.memberflag == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							        <li><a onclick=\"alert('로그인이 필요합니다.');\">나만의 책장</a></li>\r\n");
          out.write("							    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							        <li><a href=\"BookServlet?command=wish_lists\" >나만의 책장</a></li>\r\n");
          out.write("							    ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /header.jsp(96,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.memberflag == 01}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<li class=\"hiddenNav\"><a href=\"BookServlet?command=admin_main\">관리자 페이지</a>\r\n");
          out.write("							<ul>\r\n");
          out.write("								<li><a href=\"BookServlet?command=book_insert_form\">도서관리</a></li>\r\n");
          out.write("								<li><a href=\"BookServlet?command=subscr_list\">구독권관리</a></li>\r\n");
          out.write("							</ul>\r\n");
          out.write("						</li>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
